q = QuantumRegister(4, 'q')
c = ClassicalRegister(2, 'c')
circ = QuantumCircuit(q, c)
circ.u2(0,pi, q[1])
circ.cx(q[0],q[1])
circ.u1(-pi/4, q[1])
circ.cx(q[1],q[2])
circ.cx(q[2],q[1])
circ.cx(q[1],q[2])
circ.cx(q[0],q[1])
circ.cx(q[1],q[0])
circ.cx(q[0],q[1])
circ.u2(0,pi, q[3])
circ.cx(q[3],q[2])
circ.u1(pi/4, q[2])
circ.cx(q[1],q[2])
circ.u1(pi/4, q[1])
circ.u1(-pi/4, q[2])
circ.cx(q[3],q[2])
circ.cx(q[1],q[2])
circ.cx(q[2],q[1])
circ.cx(q[1],q[2])
circ.u2(0,5*pi/4, q[1])
circ.cx(q[3],q[2])
circ.u1(-pi/4, q[2])
circ.u1(pi/4, q[3])
circ.barrier()
circ.u3(pi,0,pi, q[3])
circ.cx(q[3],q[2])
circ.cx(q[2],q[3])
circ.cx(q[3],q[2])
circ.cx(q[2],q[3])
circ.cx(q[2],q[1])
circ.u2(0,pi, q[1])
circ.cx(q[2],q[3])
circ.cx(q[3],q[2])
circ.cx(q[2],q[3])
circ.cx(q[2],q[1])
circ.u1(-pi/4, q[1])
circ.cx(q[1],q[2])
circ.cx(q[2],q[1])
circ.cx(q[1],q[2])
circ.cx(q[3],q[2])
circ.u1(pi/4, q[2])
circ.cx(q[1],q[2])
circ.u1(pi/4, q[1])
circ.u1(-pi/4, q[2])
circ.cx(q[3],q[2])
circ.cx(q[2],q[3])
circ.cx(q[3],q[2])
circ.cx(q[2],q[3])
circ.cx(q[2],q[1])
circ.u1(-pi/4, q[1])
circ.u1(pi/4, q[2])
circ.cx(q[2],q[1])
circ.u2(0,5*pi/4, q[3])
circ.cx(q[2],q[3])
circ.u3(pi,0,pi, q[2])
circ.barrier()
circ.measure(q[1], c[0])
circ.measure(q[3], c[1])